tosca_definitions_version: cloudify_dsl_1_3

description: >
  This blueprint creates a Kubernetes Cluster.

imports:
  - http://www.getcloudify.org/spec/cloudify/4.3.1/types.yaml
  # - http://www.getcloudify.org/spec/diamond-plugin/1.3.6/plugin.yaml
  # # - plugin:cloudify-diamond-plugin
  # - http://www.getcloudify.org/spec/fabric-plugin/1.5.1/plugin.yaml
  # # - plugin:cloudify-fabric-plugin
  - plugin:cloudify-utilities-plugin
  - plugin:cloudify-openstack-plugin
  # - plugin:cloudify-kubernetes-plugin

  - inputs/openstack_inputs.yaml
  - inputs/inputs.yaml

  - imports/kubernetes.yaml
  - imports/cloud-config.yaml


dsl_definitions:

  openstack_config: &openstack_config
    username: { get_input: keystone_username }
    user_domain_name: { get_input: keystone_user_domain_name }
    password: { get_input: keystone_password }
    project_name: { get_input: keystone_project_name }
    project_domain_name: { get_input: keystone_project_domain_name }
    auth_url: { get_input: keystone_url }
    region: { get_input: region }

node_templates:

  k8s_master_host:
    type: cloudify.openstack.nodes.Server
    properties:
      openstack_config: *openstack_config
      agent_config:
          user: { get_input: agent_user }
          install_method: remote
          port: 22
          key: { get_secret: agent_key_private }
      image: { get_input: image }
      flavor: { get_input: flavor }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              userdata: { get_attribute: [ cloudify_host_cloud_config, cloud_config ] }
    relationships:
      - target: kubernetes_master_port
        type: cloudify.openstack.server_connected_to_port
      - type: cloudify.relationships.depends_on
        target: cloudify_host_cloud_config

  #-----------------------------------------------------------------------------

  kubernetes_master_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_config
    relationships:
      - type: cloudify.relationships.contained_in
        target: public_network
      - type: cloudify.relationships.depends_on
        target: public_subnet
      - type: cloudify.openstack.port_connected_to_security_group
        target: kubernetes_security_group
      - type: cloudify.openstack.port_connected_to_floating_ip
        target: kubernetes_master_ip

  #-----------------------------------------------------------------------------

  kubernetes_master_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      openstack_config: *openstack_config
      floatingip:
        floating_network_name: { get_property: [ external_network, resource_id ] }

  #-----------------------------------------------------------------------------

  kubernetes_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: *openstack_config
      security_group:
        name: { get_input: kubernetes_security_group_name }
        description: kubernetes master security group
      rules:
      - remote_ip_prefix: 0.0.0.0/0
        port: 22
      - remote_ip_prefix: 0.0.0.0/0
        port: 53
      - remote_ip_prefix: 0.0.0.0/0
        port: 53
        protocol: udp
      - remote_ip_prefix: 0.0.0.0/0
        port: 80
      - remote_ip_prefix: 0.0.0.0/0
        port: 443
      - remote_ip_prefix: 0.0.0.0/0
        port: 2379
      - remote_ip_prefix: 0.0.0.0/0
        port: 4001
      - remote_ip_prefix: 0.0.0.0/0
        port: 4789
      - remote_ip_prefix: 0.0.0.0/0
        port: 6443
      - remote_ip_prefix: 0.0.0.0/0
        port: 6783
        protocol: tcp
      - remote_ip_prefix: 0.0.0.0/0
        port: 6783
        protocol: udp
      - remote_ip_prefix: 0.0.0.0/0
        port: 6784
        protocol: tcp
      - remote_ip_prefix: 0.0.0.0/0
        port: 6784
        protocol: udp
      - remote_ip_prefix: 0.0.0.0/0
        port: 8000
      - remote_ip_prefix: 0.0.0.0/0
        port: 8080
      - remote_ip_prefix: 0.0.0.0/0
        port: 9090
      - remote_ip_prefix: 0.0.0.0/0
        port: 10250
      - remote_ip_prefix: 0.0.0.0/0
        port_range_min: 30000
        port_range_max: 40000

  #-----------------------------------------------------------------------------

  public_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: public_subnet_name }
    relationships:
      - target: public_network
        type: cloudify.relationships.contained_in
      - target: router
        type: cloudify.openstack.subnet_connected_to_router

  public_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: public_network_name }

  router:
    type: cloudify.openstack.nodes.Router
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: router_name }
    relationships:
      - target: external_network
        type: cloudify.relationships.connected_to

  external_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_secret: external_network_name }

  #-----------------------------------------------------------------------------


  k8s_node:
    type: cloudify.nodes.DeploymentProxy
    properties:
      resource_config:
        blueprint:
          id: k8s_node_blueprint
          blueprint_archive: { get_input: k8s_node_dep_archive }
          main_file_name: openstack.yaml
        deployment:
          id: k8s_node_deployment
          inputs:
            node_security_group: { get_attribute: [ kubernetes_security_group, external_id ] }
            public_master_ip: { get_attribute: [ kubernetes_master_ip, floating_ip_address ] }
          outputs:
            deployment-type: deployment-type
            deployment-node-data-type: deployment-node-data-type

    relationships:
      - type: cloudify.relationships.depends_on
        target: k8s_master_host
      - type: cloudify.relationships.depends_on
        target: kubernetes_security_group
      - type: cloudify.relationships.depends_on
        target: kubernetes_master

  #-----------------------------------------------------------------------------

  k8s_lb:
    type: cloudify.nodes.DeploymentProxy
    properties:
      resource_config:
        blueprint:
          id: k8s_lb_blue
          blueprint_archive: { get_input: k8s_lb_dep_archive }
          main_file_name: openstack.yaml
        deployment:
          id: k8s_lb_dep
          inputs:
            node_security_group: { get_attribute: [ kubernetes_security_group, external_id ] }
          outputs:
            deployment-type: deployment-type
            deployment-node-data-type: deployment-node-data-type

    relationships:
      - type: cloudify.relationships.depends_on
        target: k8s_master_host
      - type: cloudify.relationships.depends_on
        target: k8s_node
      - type: cloudify.relationships.depends_on
        target: kubernetes_security_group
      - type: cloudify.relationships.depends_on
        target: kubernetes_master

  #-----------------------------------------------------------------------------

outputs:

  kubernetes_master_public_ip:
    value: { get_attribute: [ kubernetes_master_ip, floating_ip_address ] }
