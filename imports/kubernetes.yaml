tosca_definitions_version: cloudify_dsl_1_3

imports:
#   - monitoring.yaml
  - dashboard.yaml

inputs:

  labels:
    default: {}

  cfy_autoscale_url:
    default: https://github.com/cloudify-incubator/cloudify-kubernetes-provider/releases/download/0.0.0%2B16/cfy-autoscale

  cfy_kubernetes_url:
    default: https://github.com/cloudify-incubator/cloudify-kubernetes-provider/releases/download/0.0.0%2B16/cfy-kubernetes

  cfy_go_url:
    default: https://github.com/cloudify-incubator/cloudify-kubernetes-provider/releases/download/0.0.0%2B16/cfy-go

node_types:

  cloudify.nodes.Kubernetes.Master:
    derived_from: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/kubernetes_master/create.py
        configure:
          implementation: scripts/kubernetes_master/configure.py
        start:
          implementation: scripts/kubernetes_master/start.py

  cloudify.nodes.ApplicationServer.kubernetes.Node:
    derived_from: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          # set ip and hostname and setup services
          implementation: scripts/kubernetes_master_services/create.py
          inputs:
            cfy_user:
              default: { get_secret: cfy_user }
            cfy_password:
              default: { get_secret: cfy_password }
            cfy_tenant:
              default: { get_secret: cfy_tenant }
            agent_user:
              default: { get_input: agent_user }
            full_install:
              default: no
            cfy_go_url:
              default: { get_input: cfy_go_url }
            cfy_autoscale_url:
              default: { get_input: cfy_autoscale_url }
            cfy_kubernetes_url:
              default: { get_input: cfy_kubernetes_url }
      maintenance:
        mount:
          implementation: scripts/kubernetes_master_services/mount.py
        unmount:
          implementation: scripts/kubernetes_master_services/unmount.py

node_templates:

  kubernetes_master:
    type: cloudify.nodes.Kubernetes.Master
    relationships:
      - type: cloudify.relationships.contained_in
        target: k8s_master_host

  kubernetes_master_services:
    type: cloudify.nodes.ApplicationServer.kubernetes.Node
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            full_install: all
    relationships:
    - target: kubernetes_master
      type: cloudify.relationships.contained_in
    # we can start only after set all properties
    - target: k8s_node
      type: cloudify.relationships.depends_on
    - target: k8s_lb
      type: cloudify.relationships.depends_on


outputs:

  kubernetes_cluster_bootstrap_token:
    value: { get_attribute: [ kubernetes_master, bootstrap_token ] }

  kubernetes_cluster_bootstrap_hash:
    value: { get_attribute: [ kubernetes_master, bootstrap_hash ] }

  kubernetes_cluster_master_ip:
    value: { get_attribute: [ kubernetes_master, master_ip ] }

  kubernetes-admin_client_certificate_data:
    value: { get_attribute: [ kubernetes_master, kubernetes-admin_client_certificate_data ] }

  kubernetes-admin_client_key_data:
    value: { get_attribute: [ kubernetes_master, kubernetes-admin_client_key_data ] }

  kubernetes_certificate_authority_data:
    value: { get_attribute: [ kubernetes_master, kubernetes_certificate_authority_data ] }
